{"ast":null,"code":"import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: [...state.cartItems, action.payload] // cartItems: addItemToCart(state.cartItems, action.payload)\n\n      };\n    // case CartActionTypes.REMOVE_ITEM:\n    // \treturn {\n    // \t\t...state,\n    // \t\tcartItems: removeItemFromCart(state.cartItems, action.payload)\n    // \t};\n    // case CartActionTypes.CLEAR_ITEM:\n    // \treturn {\n    // \t\t...state,\n    // \t\tcartItems: state.cartItems.filter(\n    // \t\t\tcartItem => cartItem.id !== action.payload.id\n    // \t\t)\n    // \t};\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/developer/workspace/e-commerce/e-commerce-app/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,eAAe,CAACU,kBAArB;AACC,aAAO,EACN,GAAGH,KADG;AAENH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFT,OAAP;;AAID,SAAKJ,eAAe,CAACW,QAArB;AACC,aAAO,EACN,GAAGJ,KADG;AAENF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACI,OAA5B,CAFL,CAGN;;AAHM,OAAP;AAKD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACC,aAAOL,KAAP;AA1BF;AA4BA,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nconst INITIAL_STATE = {\n\thidden: true,\n\tcartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase CartActionTypes.TOGGLE_CART_HIDDEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thidden: !state.hidden\n\t\t\t};\n\t\tcase CartActionTypes.ADD_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: [...state.cartItems, action.payload]\n\t\t\t\t// cartItems: addItemToCart(state.cartItems, action.payload)\n\t\t\t};\n\t\t// case CartActionTypes.REMOVE_ITEM:\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tcartItems: removeItemFromCart(state.cartItems, action.payload)\n\t\t// \t};\n\n\t\t// case CartActionTypes.CLEAR_ITEM:\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tcartItems: state.cartItems.filter(\n\t\t// \t\t\tcartItem => cartItem.id !== action.payload.id\n\t\t// \t\t)\n\t\t// \t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}