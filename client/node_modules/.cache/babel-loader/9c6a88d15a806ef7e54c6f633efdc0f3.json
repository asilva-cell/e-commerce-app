{"ast":null,"code":"var _jsxFileName = \"/home/developer/workspace/e-commerce/e-commerce-app/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport \"./cart-dropdown.style.scss\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, \"Your cart is empty.\"), \"/\", \" \", /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, \"GO TO CHECKOUT\")); // const CartDropdown = ({ cartItems, history, dispatch }) => (\n//   <div className=\"cart-dropdown\">\n//     <div\n//       className=\"close-button\"\n//       onClick={() => {\n//         dispatch(toggleCartHidden());\n//       }}\n//     >\n//       &#10005;\n//     </div>\n// \t<CustomButton\n//       onClick={() => {\n//         history.push(\"/checkout\");\n//         dispatch(toggleCartHidden());\n//       }}\n//     >\n//       GO TO CHECKOUT\n//     </CustomButton>\n//     <div className=\"cart-items\">\n//       {cartItems.length ? (\n//         cartItems.map((cartItem) => (\n//           <CartItem key={cartItem.id} item={cartItem} />\n//         ))\n//       ) : (\n//         <span className=\"empty-message\">Your cart is empty.</span>\n//       )}\n//     </div>\n//   </div>\n// );\n//createStructuredSelector passes the higher state\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); // connect passes dispatch by default\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/developer/workspace/e-commerce/e-commerce-app/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","length","map","cartItem","id","push","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,4BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBH,EAAAA;AAAtB,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAeC,QAAD,iBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,gBAKC;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,OAQI,GARJ,eASE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbH,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAC,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CADF,C,CAqBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,MAAMU,eAAe,GAAGf,wBAAwB,CAAC;AAC/CO,EAAAA,SAAS,EAAEH;AADoC,CAAD,CAAhD,C,CAIA;;AACA,eAAeH,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nimport \"./cart-dropdown.style.scss\";\n\nconst CartDropdown = ({ cartItems, history, toggleCartHidden }) => (\n  <div className=\"cart-dropdown\">\n    {cartItems.length ? (\n      cartItems.map((cartItem) => (\n        <CartItem key={cartItem.id} item={cartItem} />\n      ))\n    ) : (\n      <span className=\"empty-message\">Your cart is empty.</span>\n    )}\n    /{\" \"}\n    <CustomButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </div>\n);\n\n// const CartDropdown = ({ cartItems, history, dispatch }) => (\n//   <div className=\"cart-dropdown\">\n\n//     <div\n//       className=\"close-button\"\n//       onClick={() => {\n//         dispatch(toggleCartHidden());\n//       }}\n//     >\n//       &#10005;\n//     </div>\n// \t<CustomButton\n//       onClick={() => {\n//         history.push(\"/checkout\");\n//         dispatch(toggleCartHidden());\n//       }}\n//     >\n//       GO TO CHECKOUT\n//     </CustomButton>\n//     <div className=\"cart-items\">\n//       {cartItems.length ? (\n//         cartItems.map((cartItem) => (\n//           <CartItem key={cartItem.id} item={cartItem} />\n//         ))\n//       ) : (\n//         <span className=\"empty-message\">Your cart is empty.</span>\n//       )}\n//     </div>\n\n//   </div>\n// );\n\n//createStructuredSelector passes the higher state\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\n\n// connect passes dispatch by default\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}