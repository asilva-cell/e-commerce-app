{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{selectCartItems,selectCartTotal}from\"../../redux/cart/cart.selectors\";import CheckoutItem from\"../../components/checkout-item/checkout-item.component\";import StripeCheckoutButton from\"../../components/stripe-button/stripe-button.component\";import\"./checkout.style.scss\";var CheckoutPage=function CheckoutPage(_ref){var cartItems=_ref.cartItems,total=_ref.total;return/*#__PURE__*/React.createElement(\"div\",{className:\"checkout-page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"checkout-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Quantity\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Price\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-block\"},/*#__PURE__*/React.createElement(\"span\",null,\"Remove\"))),cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CheckoutItem,{key:cartItem.id,cartItem:cartItem});}),/*#__PURE__*/React.createElement(\"div\",{className:\"total\"},/*#__PURE__*/React.createElement(\"span\",null,\"TOTAL: $\".concat(total,\" CAD\"))),/*#__PURE__*/React.createElement(StripeCheckoutButton,{price:total}),/*#__PURE__*/React.createElement(\"div\",{className:\"test-warning\"},\"For credit card payment testing, please use: \",/*#__PURE__*/React.createElement(\"br\",null),\"card#: 4242 4242 4242 4242 - date: Any future date - cvc: Any 3 digits\"));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,total:selectCartTotal});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/home/developer/workspace/e-commerce/e-commerce-app/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","selectCartItems","selectCartTotal","CheckoutItem","StripeCheckoutButton","CheckoutPage","cartItems","total","map","cartItem","id","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CAEA,OACEC,eADF,CAEEC,eAFF,KAGO,iCAHP,CAKA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wDAAjC,CAEA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,KAAd,MAAcA,KAAd,oBACnB,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,2CADF,CADF,cAIE,2BAAK,SAAS,CAAC,cAAf,eACE,wCADF,CAJF,cAOE,2BAAK,SAAS,CAAC,cAAf,eACE,yCADF,CAPF,CADF,CAYGD,SAAS,CAACE,GAAV,CAAc,SAACC,QAAD,qBACb,oBAAC,YAAD,EAAc,GAAG,CAAEA,QAAQ,CAACC,EAA5B,CAAgC,QAAQ,CAAED,QAA1C,EADa,EAAd,CAZH,cAeE,2BAAK,SAAS,CAAC,OAAf,eACE,kDAAkBF,KAAlB,SADF,CAfF,cAkBE,oBAAC,oBAAD,EAAsB,KAAK,CAAEA,KAA7B,EAlBF,cAmBE,2BAAK,SAAS,CAAC,cAAf,+DAC+C,8BAD/C,0EAnBF,CADmB,EAArB,CA2BA,GAAMI,CAAAA,eAAe,CAAGX,wBAAwB,CAAC,CAC/CM,SAAS,CAAEL,eADoC,CAE/CM,KAAK,CAAEL,eAFwC,CAAD,CAAhD,CAKA,cAAeH,CAAAA,OAAO,CAACY,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../redux/cart/cart.selectors\";\n\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\n\nimport \"./checkout.style.scss\";\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <div className=\"checkout-page\">\n    <div className=\"checkout-header\">\n      <div className=\"header-block\">\n        <span>Quantity</span>\n      </div>\n      <div className=\"header-block\">\n        <span>Price</span>\n      </div>\n      <div className=\"header-block\">\n        <span>Remove</span>\n      </div>\n    </div>\n    {cartItems.map((cartItem) => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <div className=\"total\">\n      <span>{`TOTAL: $${total} CAD`}</span>\n    </div>\n    <StripeCheckoutButton price={total} />\n    <div className=\"test-warning\">\n      For credit card payment testing, please use: <br />\n      card#: 4242 4242 4242 4242 - date: Any future date - cvc: Any 3 digits\n    </div>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}